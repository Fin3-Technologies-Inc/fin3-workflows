name: Build and Publish

on:
  workflow_call:
    inputs:
      image_name:
        required: true
        type: string
      tag:
        required: true
        type: string
    secrets:
      fin3_github_token:
        required: true
      dockerhub_user:
        required: true
      dockerhub_token:
        required: true
      fin3_docker_sign_priv_key:
        required: true
      fin3_docker_sign_passwd:
        required: true

env:
  REGISTRY: fin3technologies

jobs:
  java_build:
    name: Build Jar
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml

      - name: Build jar with Gradle
        run: |
          NEW_VERSION=`echo ${{inputs.tag}} | sed 's/^.*[^0-9]\([0-9]*\.[0-9]*\.[0-9]*\).*$/\1/'`
          ./gradlew clean build -x test -Pversion="$NEW_VERSION"
        env:
          GITHUB_TOKEN: ${{ secrets.fin3_github_token }}

      - name: Upload Service Artifact
        uses: actions/upload-artifact@v2
        with:
          name: service
          path: application/build/libs/application-*.jar
  
  docker_build:
    name: Build and Push to Docker Registry
    needs: java_build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set the tag
        run: |
          if [ -z "${{inputs.tag}}" ]
          then
            echo "final_tag=latest" >> $GITHUB_ENV
          else
            final_majortag=`echo ${{inputs.tag}} | awk -F\. '{print $1".x"}'`
            final_minortag=`echo ${{inputs.tag}} | awk -F\. '{print $1"."$2".x"}'`
            echo "final_tag=${{inputs.tag}}" >> $GITHUB_ENV
            echo "final_majortag=$final_majortag" >> $GITHUB_ENV
            echo "final_minortag=$final_minortag" >> $GITHUB_ENV
          fi

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.dockerhub_user }}
          password: ${{ secrets.dockerhub_token }}

      - name: Download Service Artifact
        uses: actions/download-artifact@v2
        with:
          name: service
          path: service/build/libs

      - name: Build and push service docker
        if: env.final_tag == 'latest'
        uses: docker/build-push-action@v2
        with:
          file: docker/Dockerfile-service
          context: .
          push: true
          tags: fin3technologies/${{ inputs.image_name }}:latest

      - name: Build and push service docker
        if: env.final_tag != 'latest'
        uses: docker/build-push-action@v2
        with:
          file: docker/Dockerfile-service
          context: .
          push: true
          tags: fin3technologies/${{ inputs.image_name }}:${{ env.final_tag }},fin3technologies/${{ inputs.image_name }}:${{ env.final_majortag }},fin3technologies/${{ inputs.image_name }}:${{ env.final_minortag }},fin3technologies/${{ inputs.image_name }}:latest

      - name: cosign-installer
        uses: Fin3-Technologies-Inc/gh-action-cosign-installer@main

      - name: Write signing key to disk
        run: 'echo "$KEY" > cosign.key'
        shell: bash
        env:
          KEY: ${{ secrets.fin3_docker_sign_priv_key }}

      - name: Sign the published Docker image
        env:
          COSIGN_PASSWORD: ${{ secrets.fin3_docker_sign_passwd }}
        run: |
          cosign sign --key cosign.key \
            -a "repo=${{ github.repository }}" \
            -a "auther=Fin3 Technologies Inc" \
            -a "ref=${{ github.sha }}" \
          ${{ env.REGISTRY }}/${{ inputs.image_name }}:${{ env.final_tag }}